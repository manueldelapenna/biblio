<?php

/**
 * BaseSocio
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $numero_socio
 * @property string $nombre
 * @property string $apellido
 * @property string $dni
 * @property string $domicilio
 * @property string $localidad
 * @property string $codigo_postal
 * @property string $telefono
 * @property string $celular
 * @property string $mail
 * @property boolean $descuento_familiar
 * @property Doctrine_Collection $Cuotas
 * 
 * @method integer             getNumeroSocio()        Returns the current record's "numero_socio" value
 * @method string              getNombre()             Returns the current record's "nombre" value
 * @method string              getApellido()           Returns the current record's "apellido" value
 * @method string              getDni()                Returns the current record's "dni" value
 * @method string              getDomicilio()          Returns the current record's "domicilio" value
 * @method string              getLocalidad()          Returns the current record's "localidad" value
 * @method string              getCodigoPostal()       Returns the current record's "codigo_postal" value
 * @method string              getTelefono()           Returns the current record's "telefono" value
 * @method string              getCelular()            Returns the current record's "celular" value
 * @method string              getMail()               Returns the current record's "mail" value
 * @method boolean             getDescuentoFamiliar()  Returns the current record's "descuento_familiar" value
 * @method Doctrine_Collection getCuotas()             Returns the current record's "Cuotas" collection
 * @method Socio               setNumeroSocio()        Sets the current record's "numero_socio" value
 * @method Socio               setNombre()             Sets the current record's "nombre" value
 * @method Socio               setApellido()           Sets the current record's "apellido" value
 * @method Socio               setDni()                Sets the current record's "dni" value
 * @method Socio               setDomicilio()          Sets the current record's "domicilio" value
 * @method Socio               setLocalidad()          Sets the current record's "localidad" value
 * @method Socio               setCodigoPostal()       Sets the current record's "codigo_postal" value
 * @method Socio               setTelefono()           Sets the current record's "telefono" value
 * @method Socio               setCelular()            Sets the current record's "celular" value
 * @method Socio               setMail()               Sets the current record's "mail" value
 * @method Socio               setDescuentoFamiliar()  Sets the current record's "descuento_familiar" value
 * @method Socio               setCuotas()             Sets the current record's "Cuotas" collection
 * 
 * @package    subsecretaria
 * @subpackage model
 * @author     Manuel De la Penna
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSocio extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('socio');
        $this->hasColumn('numero_socio', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => true,
             ));
        $this->hasColumn('nombre', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('apellido', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('dni', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('domicilio', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('localidad', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('codigo_postal', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('telefono', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('celular', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('mail', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('descuento_familiar', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Cuota as Cuotas', array(
             'local' => 'id',
             'foreign' => 'socio_id'));
    }
}